name: "gcloud Setup and deploy action"
description: "Setup docker auth and kubernetes auth and deploy via skaffold"
inputs:
  service_account_key:
    description: "Google Service Key"
    required: true
    default: ""
  project:
    description: "Google Project"
    required: true
  zone:
    description: "Google Zone"
    required: true
  cluster:
    description: "Google Kubernetes Cluster *required if you are deploying"
    required: false
    default: ""
  skaffold_profile:
    description: "The Skaffold profile to use (prodcution/dev etc) *required if you are deploying"
    required: false
    default: ""
  docker_slug:
    description: "The docker repo slug e.g: europe-docker.pkg.dev/remotecompany/autossl-caddy/autossl-caddy"
    required: false
    default: ""
  docker_file:
    description: "The docker file path e.g: docker/mailerlite/Dockerfile"
    required: false
    default: "Dockerfile"
  docker_tag:
    description: "The docker tag to overide the git version tag"
    required: false
  docker_build_extra:
    description: "Extra docker build extra args e.g: --build-arg GITHUB_TOKEN=etc"
    required: false
    default: ""
  artifact_registry:
    description: "The artifact_registry to setup auth agains e.g: us-east1-docker.pkg.dev"
    required: false
    default: "europe-docker.pkg.dev"
  helm_pat:
    description: "PAT for setting up helm repo"
    required: false
    default: ""
  validate_helm_env:
    description: "An environment to run make helm:validate against (usually one of branch|dev|prod)"
    required: false
    default: "prod"
runs:
  using: "composite"
  steps:
    - name: Get the version
      shell: bash
      id: get_version
      run: |
        if [ -n "${{ inputs.docker_slug }}" ]; then
          if [ -n "${{ inputs.docker_tag }}" ]; then
            echo '::set-output name=VERSION::${{ inputs.docker_tag }}'
          else
            echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
          fi
        fi

    - name: Authenticate with Google Cloud
      shell: bash
      run: |
        echo ${{ inputs.service_account_key }} | base64 -d > /tmp/key.json
        gcloud auth activate-service-account --key-file=/tmp/key.json

    - name: Configure project and region
      shell: bash
      run: |
        gcloud --quiet config set project ${{ inputs.project }}
        gcloud --quiet config set compute/zone ${{ inputs.zone }}

    - name: Docker Login
      shell: bash
      run: |
        gcloud auth configure-docker ${{ inputs.artifact_registry }} --quiet

    - name: Get Cluster Credentials
      shell: bash
      run: |
        if [ -n "${{ inputs.cluster }}" ]; then
          gcloud container clusters get-credentials ${{ inputs.cluster }} --zone=${{ inputs.zone }}
        fi

    - name: Setup Helm repo
      shell: bash
      run: |
        if [[ -n "${{ inputs.cluster }}" && -n "${{ inputs.skaffold_profile }}" && -n "${{ inputs.helm_pat }}" ]]; then
            helm repo add --username ziltoidbot --password ${{ inputs.helm_pat }} remotecompany https://raw.githubusercontent.com/remotecompany/charts/main/index
        fi

    - name: Validate Helm templates
      shell: bash
      run: |
        helm secrets template mailersend helm/ --kube-version=1.19.12 --namespace "${{ inputs.validate_helm_env }}" -f helm/values."${{ inputs.validate_helm_env }}".yaml -f helm/secrets."${{ inputs.validate_helm_env }}".yaml > "${{ inputs.validate_helm_env }}".yaml 
        /usr/local/bin/kubeval --schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/ -v 1.19.12 --strict --ignore-missing-schemas --filename=""${{ inputs.validate_helm_env }}".yaml" "${{ inputs.validate_helm_env }}".yaml
          
        if [ -s "${{ inputs.validate_helm_env }}".yaml ]; then
          exit 0
        else
          exit 1
        fi
      env:
        GOOGLE_APPLICATION_CREDENTIALS: /tmp/key.json        

    - name: Skaffold build and deploy ${{ inputs.skaffold_profile }}
      shell: bash
      run: |
        if [[ -n "${{ inputs.cluster }}" && -n "${{ inputs.skaffold_profile }}" ]]; then
          helm repo add bitnami https://charts.bitnami.com/bitnami
          skaffold run -p ${{ inputs.skaffold_profile }}
        fi

    - name: Build and Push Docker Image if there is a docker slug
      shell: bash
      run: |
        if [ -n "${{ inputs.docker_slug }}" ]; then
          docker build ${{ inputs.docker_build_extra }} -f ${{ inputs.docker_file }} -t ${{ inputs.docker_slug }}:${{ steps.get_version.outputs.VERSION }} -t ${{ inputs.docker_slug }}:latest .
          echo "${{ inputs.docker_slug }}:${{ steps.get_version.outputs.VERSION }}" "${{ inputs.docker_slug }}:latest" | xargs -n 1 docker push
        fi
